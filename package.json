{
  "name": "plate",
  "description": "",
  "version": "1.0.0",
  "author": "",
  "homepage": "",
  "keywords": [],
  "license": "ISC",
  "main": "gulpfile.js",
  "scripts": {
    "build": "gulp build --color",
    "build.client": "gulp build.client --color",
    "build.prod": "NODE_ENV=production npm run build; npm run build.vendors; npm run build.bundles; npm run build.app; npm run build.cleanup; npm run build.gzip; git log -1 > dist/prod/plate.version",
    "build.staging": "TARGET=staging npm run build.prod",
    "build.prod.tarball": "NODE_ENV=production npm run build.prod ; npm run build.tarball",
    "build.vendors": "NODE_ENV=production gulp bundle.vendors --color",
    "build.bundles": "NODE_ENV=production npm run build.outside.bundle && NODE_ENV=production npm run build.plate.bundle",
    "build.outside.bundle": "NODE_ENV=production browserify dist/prod/client/outside/app/main.js -o dist/prod/client/outside/bundle.js",
    "build.plate.bundle": "NODE_ENV=production browserify dist/prod/client/plate/app/main.js -o dist/prod/client/plate/bundle.js",
    "build.app": "NODE_ENV=production gulp bundle.app --color",
    "build.cleanup": "NODE_ENV=production gulp build.cleanup --color",
    "build.gzip": "NODE_ENV=production gulp build.gzip --color",
    "build.semantic": "gulp build.semantic --color",
    "build.server": "gulp build.server --color",
    "build.server.prod": "NODE_ENV=production browserify --node dist/prod/server/src/server.js -o dist/prod/server/server.min.js",
    "build.tarball": "cd dist/prod && tar zcvf ../plate.prod.tar.gz client server > /dev/null 2>&1",
    "build.watch": "gulp build.watch --color",
    "build.deploy.prod": "npm run build.semantic && npm run build.prod && npm run deploy.prod",
    "build.deploy.staging": "npm run build.semantic && npm run build.staging && npm run deploy.staging",
    "build.deploy.prod.nosemantic": "npm run build.prod && npm run deploy.prod",
    "build.deploy.staging.nosemantic": "npm run build.staging && npm run deploy.staging",
    "deploy.prod": "ansible-playbook -i deploy/production deploy/deploy-app.yml --ask-vault-pass",
    "deploy.staging": "ansible-playbook -i deploy/staging deploy/deploy-app.yml",
    "db.backup.prod": "ansible-playbook -i deploy/production deploy/backup-mongo.yml --ask-vault-pass",
    "db.backup.staging": "ansible-playbook -i deploy/staging deploy/backup-mongo.yml",
    "gulp": "gulp",
    "npm.client": "cd client && npm install",
    "npm.server": "cd server && npm install",
    "npm.setup": "concurrently \"npm run npm.client\" \"npm run npm.server\"",
    "postinstall": "typings install ; (cd src/client && typings install) ; (cd src/server && typings install)",
    "reinstall": "npm cache clean && npm install",
    "serve": "gulp serve --color",
    "serve.no-build": "gulp serve.no-build --color",
    "serve.prod": "NODE_ENV=production gulp run --color",
    "serve.watch": "gulp serve.watch --color ",
    "ssh-tunnel.prod": "ssh -f -L 27000:localhost:27017 mongo-01.plate.work sleep 300",
    "ssh-tunnel.staging": "ssh -f -L 27001:localhost:27017 staging-01.plate.work sleep 300",
    "start": "gulp run --color",
    "tasks.list": "gulp --tasks-simple --color",
    "test": "echo \"Error: no test specified\" && exit 1",
    "tsc": "tsc",
    "tsc:w": "tsc -w",
    "typings": "typings",
    "typings.clean": "rm -r src/client/typings/globals && rm -r src/server/typings",
    "typings.install": "typings install ; (cd src/client && typings install) ; (cd src/server && typings install)"
  },
  "dependencies": {
    "@angular/common": "2.0.0",
    "@angular/compiler": "2.0.0",
    "@angular/core": "2.0.0",
    "@angular/forms": "2.0.0",
    "@angular/http": "2.0.0",
    "@angular/platform-browser": "2.0.0",
    "@angular/platform-browser-dynamic": "2.0.0",
    "@angular/router": "3.0.0",
    "@angular/upgrade": "2.0.0",
    "@slack/client": "^3.5.4",
    "@types/compression": "0.0.32",
    "angular2-jwt": "^0.1.23",
    "aws-sdk": "^2.6.4",
    "body-parser": "^1.15.2",
    "bootstrap": "^3.3.6",
    "browserify-middleware": "^7.0.0",
    "bufferutil": "^1.2.1",
    "compression": "^1.6.2",
    "core-js": "^2.4.1",
    "cors": "^2.7.1",
    "crypto": "0.0.3",
    "dragula": "^3.7.1",
    "express": "^4.14.0",
    "express-jwt": "^6.0.0",
    "formidable": "^1.0.17",
    "gm": "^1.23.0",
    "gulp-decompress": "^2.0.0",
    "jsonwebtoken": "^7.1.6",
    "mongoose": "4.13.7",
    "ng2-dragula": "1.1.10",
    "ng2-file-upload": "^1.1.0",
    "node-uuid": "^1.4.7",
    "passport": "^0.3.2",
    "passport-google-oauth20": "^1.0.0",
    "passport-local": "^1.0.0",
    "promise": "^7.1.1",
    "q": "^1.4.1",
    "reflect-metadata": "^0.1.3",
    "request": "^2.74.0",
    "rxjs": "5.0.0-beta.12",
    "semantic-ui": "2.2.4",
    "sendgrid": "^4.0.1",
    "socket.io": "^1.4.8",
    "socketio-jwt": "^4.5.0",
    "stripe": "^4.11.0",
    "swig": "^1.4.2",
    "systemjs": "0.19.27",
    "username": "^2.2.2",
    "utf-8-validate": "^1.2.1",
    "zone.js": "^0.6.23"
  },
  "devDependencies": {
    "browserify": "^13.1.0",
    "concurrently": "^2.2.0",
    "del": "^2.2.1",
    "gulp": "^3.9.1",
    "gulp-clean": "^0.3.2",
    "gulp-clean-css": "^2.0.12",
    "gulp-clone": "^1.0.0",
    "gulp-concat": "^2.6.0",
    "gulp-debug": "^2.1.2",
    "gulp-gunzip": "0.0.3",
    "gulp-gzip": "^1.4.0",
    "gulp-html-replace": "^1.6.1",
    "gulp-if": "^2.0.1",
    "gulp-minify-css": "^1.2.4",
    "gulp-print": "^2.0.1",
    "gulp-rename": "^1.2.2",
    "gulp-replace": "^0.5.4",
    "gulp-sass": "^2.3.2",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-sym": "0.0.14",
    "gulp-typescript": "^2.13.6",
    "gulp-uglify": "^2.0.0",
    "gulp-untar": "0.0.4",
    "gulp-util": "^3.0.7",
    "merge-stream": "^1.0.0",
    "run-sequence": "^1.2.2",
    "systemjs-builder": "^0.15.30",
    "ts-node": "^1.0.0",
    "typescript": "~1.8.10",
    "typings": "^1.3.3",
    "vinyl-source-stream": "^1.1.0"
  }
}
